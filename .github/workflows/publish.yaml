name: Publish

on:
  release:
    types: ["published"]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set versions
        run: |
          echo 'version = "${{ github.ref_name }}"'
          sed -i -e 's/version = "0.0.0"/version = "${{ github.ref_name }}"/g' */Cargo.toml
          sed -i -e 's/version = "0.0.0"/version = "${{ github.ref_name }}"/g' Cargo.lock

      - name: Rustup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Cross
        run: cargo install --locked --git https://github.com/cross-rs/cross.git cross

      - name: Build for Raspberry Pi Zero W
        run: cross build --target arm-unknown-linux-gnueabihf --release

      - name: Build Changelog
        id: changelog
        uses: Bullrich/generate-release-changelog@master
        env:
          REPO: ${{ github.repository }}

      - name: Upload rusty-tractive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: "${{ github.event.release.upload_url }}"
          asset_path: "target/arm-unknown-linux-gnueabihf/release/rusty-tractive"
          asset_name: "rusty-tractive.arm-unknown-linux-gnueabihf"
          asset_content_type: "application/octet-stream"

      - name: Upload rusty-tractive-telegram-bot
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ github.event.release.upload_url }}"
          asset_path: "target/arm-unknown-linux-gnueabihf/release/rusty-tractive-telegram-bot"
          asset_name: "rusty-tractive-telegram-bot.arm-unknown-linux-gnueabihf"
          asset_content_type: "application/octet-stream"

      - name: Upload rusty-tado
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: "${{ github.event.release.upload_url }}"
          asset_path: "target/arm-unknown-linux-gnueabihf/release/rusty-tado"
          asset_name: "rusty-tado.arm-unknown-linux-gnueabihf"
          asset_content_type: "application/octet-stream"

      - name: Update release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: false

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: "eigenein"
          SENTRY_PROJECT: "rusty-home"
        with:
          version: ${{ github.ref_name }}

      - name: Set up Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          version: "1.24.2"

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary
          config: |
            Host blueberrypi cranberrypi strawberrypi
              User pi
              StrictHostKeyChecking no

      - name: Rsync and restart
        working-directory: ./target/arm-unknown-linux-gnueabihf/release
        run: |
          for host in blueberrypi cranberrypi strawberrypi
          do
            echo "Deploying to $host…"
            for filename in rusty-tractive rusty-tractive-telegram-bot
            do
              echo "Syncing and restarting $filename…"
              rsync -az $filename $host:/home/pi/bin/$filename.arm-unknown-linux-gnueabihf
              ssh $host "sudo systemctl restart $filename; systemctl status --lines=0 $filename"
            done
          done
